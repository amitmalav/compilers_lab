INT: int
IDENTIFIER: foo
lparen: (
INT: int
IDENTIFIER: a
comma: ,
FLOAT: float
IDENTIFIER: b
rparen: )
lflowerbrac: {

INT: int
IDENTIFIER: c
assign: =
INT_CONSTANT: 0
semi-colon: ;

FLOAT: float
IDENTIFIER: d
assign: =
FLOAT_CONSTANT: 13.15625
semi-colon: ;

IF: if
lparen: (
not: !
IDENTIFIER: a
AND_OPERATOR: &&
IDENTIFIER: b
rparen: )
lflowerbrac: {

IDENTIFIER: c
INC_OPERATOR: ++
semi-colon: ;

rflowerbrac: }

ELSE: else
lflowerbrac: {

IDENTIFIER: c
minus: -
minus: -
semi-colon: ;

rflowerbrac: }

FOR: for
lparen: (
semi-colon: ;
semi-colon: ;
rparen: )
lflowerbrac: {
IF: if
lparen: (
IDENTIFIER: a
LESS_OR_EQ_OPERATOR: <=
IDENTIFIER: b
rparen: )
IDENTIFIER: c
INC_OPERATOR: ++
semi-colon: ;
rflowerbrac: }
semi-colon: ;

IDENTIFIER: printf
lparen: (
STRING_LITERAL: "abclkafn\n"
rparen: )
semi-colon: ;

RETURN: return
IDENTIFIER: c
semi-colon: ;

rflowerbrac: }
